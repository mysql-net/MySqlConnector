variables:
  DotNetCoreSdkVersion: '8.x'
  NUGET_PACKAGES: '$(Pipeline.Workspace)/.nuget/packages'

jobs:
- job: linux_build
  displayName: 'Linux Build'
  pool:
    vmimage: 'ubuntu-20.04'
  steps:
  - template: '.ci/build-steps.yml'

- job: windows_build
  displayName: 'Windows Build'
  pool:
    vmimage: 'windows-latest'
  steps:
  - template: '.ci/build-steps.yml'
  - task: DotNetCoreCLI@2
    displayName: 'Publish IntegrationTests (net472)'
    inputs:
      command: 'publish'
      arguments: '-c Release -f net472 tests/IntegrationTests/IntegrationTests.csproj'
      publishWebProjects: false
      zipAfterPublish: false
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'IntegrationTests-net472-$(Agent.OS)'
      targetPath: 'artifacts/publish/IntegrationTests/release_net472'

- job: windows_mysql_data
  displayName: 'MySql.Data Tests'
  pool:
    vmimage: 'windows-2019'
  steps:
  - template: '.ci/install-mysql-windows.yml'
  - task: CopyFiles@2
    displayName: 'Copy config.json'
    inputs:
      sourceFolder: '.ci/config'
      contents: 'config.json'
      targetFolder: 'tests/IntegrationTests'
  - task: UseDotNet@2
    displayName: 'Install .NET 7.0'
    inputs:
      version: '7.0.x'
  - task: UseDotNet@2
    displayName: 'Install .NET'
    inputs:
      version: $(DotNetCoreSdkVersion)
      includePreviewVersions: true
  - task: DotNetCoreCLI@2
    displayName: 'MySql.Data unit tests'
    inputs:
      command: 'test'
      arguments: 'tests\MySqlConnector.Tests\MySqlConnector.Tests.csproj -c MySqlData'
      testRunTitle: 'MySql.Data unit tests'
  - task: DotNetCoreCLI@2
    displayName: 'MySql.Data integration tests'
    inputs:
      command: 'test'
      arguments: 'tests\IntegrationTests\IntegrationTests.csproj -c MySqlData'
      testRunTitle: 'MySql.Data integration tests'
    env:
      DATA__UNSUPPORTEDFEATURES: 'Ed25519,QueryAttributes,StreamingResults,UnixDomainSocket'
      DATA__CONNECTIONSTRING: 'server=localhost;port=3306;user id=root;password=test;database=mysqltest;ssl mode=none;DefaultCommandTimeout=3600'
      DATA__CERTIFICATESPATH: '$(Build.Repository.LocalPath)\.ci\server\certs\'
      DATA__MYSQLBULKLOADERLOCALCSVFILE: '$(Build.Repository.LocalPath)\tests\TestData\LoadData_UTF8_BOM_Unix.CSV'
      DATA__MYSQLBULKLOADERLOCALTSVFILE: '$(Build.Repository.LocalPath)\tests\TestData\LoadData_UTF8_BOM_Unix.TSV'
      TF_BUILD: $(TF_BUILD)
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: '**/*.trx'
      testRunTitle: 'MySql.Data Tests'
      failTaskOnFailedTests: true

- job: linux_unit_tests
  dependsOn: linux_build
  displayName: 'Linux Unit Tests'
  pool:
    vmimage: 'ubuntu-20.04'
  steps:
  - template: '.ci/mysqlconnector-tests-steps.yml'

- job: windows_unit_tests
  dependsOn: windows_build
  displayName: 'Windows Tests'
  pool:
    vmimage: 'windows-2019'
  steps:
  - template: '.ci/install-mysql-windows.yml'
  - task: UseDotNet@2
    displayName: 'Install .NET Core 3.1'
    inputs:
      version: 3.1.x
      packageType: runtime
  - template: '.ci/mysqlconnector-tests-steps.yml'
  - template: '.ci/conformance-test-steps.yml'
    parameters:
      image: 'mysql:8.0'
      connectionString: 'server=localhost;port=3306;user id=mysqltest;password=test;database=conformance;ssl mode=none;DefaultCommandTimeout=3600;AllowPublicKeyRetrieval=True'

- job: windows_integration_tests_1
  displayName: 'Windows Integration Tests (Part 1)'
  pool:
    vmimage: 'windows-2019'
  steps:
  - template: '.ci/install-mysql-windows.yml'
  - task: UseDotNet@2
    displayName: 'Install .NET'
    inputs:
      version: $(DotNetCoreSdkVersion)
      includePreviewVersions: true
  - task: CopyFiles@2
    displayName: 'Copy config.json'
    inputs:
      sourceFolder: '.ci/config'
      contents: 'config.json'
      targetFolder: 'tests/IntegrationTests'
  - task: PowerShell@2
    displayName: 'Remove target frameworks'
    inputs:
      targetType: 'inline'
      script: '((Get-Content .\tests\IntegrationTests\IntegrationTests.csproj -Raw) -replace(''<TargetFrameworks>.*</TargetFrameworks>'', ''<TargetFrameworks>net472;net8.0</TargetFrameworks>'')) | Set-Content .\tests\IntegrationTests\IntegrationTests.csproj'
  - task: DotNetCoreCLI@2
    displayName: 'Restore packages'
    inputs:
      command: 'restore'
  - task: DotNetCoreCLI@2
    displayName: 'Integration tests (net472/net8.0)'
    inputs:
      command: 'test'
      projects: 'tests/IntegrationTests/IntegrationTests.csproj'
      arguments: '-c Release --no-restore'
      testRunTitle: ${{ format('{0}, $(Agent.OS), {1}, {2}', 'mysql:8.0', 'net472/net8.0', 'No SSL') }}
    env:
      DATA__UNSUPPORTEDFEATURES: 'Ed25519,QueryAttributes,Redirection,StreamingResults,Tls11,UnixDomainSocket'
      DATA__CONNECTIONSTRING: 'server=localhost;port=3306;user id=mysqltest;password=test;database=mysqltest;ssl mode=none;DefaultCommandTimeout=3600;AllowPublicKeyRetrieval=True;UseCompression=True'

- job: windows_integration_tests_2
  displayName: 'Windows Integration Tests (Part 2)'
  pool:
    vmimage: 'windows-2019'
  steps:
  - template: '.ci/install-mysql-windows.yml'
  - task: UseDotNet@2
    displayName: 'Install .NET 6.0'
    inputs:
      version: 6.0.x
      packageType: runtime
  - task: UseDotNet@2
    displayName: 'Install .NET'
    inputs:
      version: $(DotNetCoreSdkVersion)
      includePreviewVersions: true
  - script: copy .ci\config\config.json tests\IntegrationTests\config.json
    displayName: 'Copy config.json'
  - task: PowerShell@2
    displayName: 'Remove target frameworks'
    inputs:
      targetType: 'inline'
      script: '((Get-Content .\tests\IntegrationTests\IntegrationTests.csproj -Raw) -replace(''<TargetFrameworks>.*</TargetFrameworks>'', ''<TargetFrameworks>net6.0</TargetFrameworks>'')) | Set-Content .\tests\IntegrationTests\IntegrationTests.csproj'
  - task: DotNetCoreCLI@2
    displayName: 'Restore packages'
    inputs:
      command: 'restore'
  - task: DotNetCoreCLI@2
    displayName: 'Integration tests (net6.0)'
    inputs:
      command: 'test'
      projects: 'tests/IntegrationTests/IntegrationTests.csproj'
      arguments: '-c Release --no-restore'
      testRunTitle: ${{ format('{0}, $(Agent.OS), {1}, {2}', 'mysql:8.0', 'net6.0', 'No SSL') }}
    env:
      DATA__UNSUPPORTEDFEATURES: 'Ed25519,QueryAttributes,Redirection,StreamingResults,Tls11,UnixDomainSocket'
      DATA__CONNECTIONSTRING: 'server=localhost;port=3306;user id=mysqltest;password=test;database=mysqltest;ssl mode=none;DefaultCommandTimeout=3600;AllowPublicKeyRetrieval=True'

- job: linux_integration_tests
  dependsOn: linux_build
  displayName: 'Linux Tests'
  pool:
    vmimage: 'ubuntu-20.04'
  strategy:
    matrix:
      'MySQL 8.0':
        image: 'mysql:8.0'
        connectionStringExtra: 'AllowPublicKeyRetrieval=True'
        unsupportedFeatures: 'Ed25519,Redirection,StreamingResults,Tls11,ZeroDateTime'
      'MySQL 8.4':
        image: 'mysql:8.4'
        connectionStringExtra: 'AllowPublicKeyRetrieval=True'
        unsupportedFeatures: 'Ed25519,Redirection,StreamingResults,Tls11,ZeroDateTime'
      'MySQL 9.0':
        image: 'mysql:9.0'
        connectionStringExtra: 'AllowPublicKeyRetrieval=True'
        unsupportedFeatures: 'Ed25519,Redirection,StreamingResults,Tls11,ZeroDateTime'
      'MariaDB 10.6':
        image: 'mariadb:10.6'
        connectionStringExtra: ''
        unsupportedFeatures: 'CachingSha2Password,CancelSleepSuccessfully,Json,RoundDateTime,QueryAttributes,Sha256Password,Tls11,UuidToBin,Redirection'
      'MariaDB 10.11':
        image: 'mariadb:10.11'
        connectionStringExtra: ''
        unsupportedFeatures: 'CachingSha2Password,CancelSleepSuccessfully,Json,RoundDateTime,QueryAttributes,Sha256Password,Tls11,UuidToBin,Redirection'
      'MariaDB 11.4':
        image: 'mariadb:11.4'
        connectionStringExtra: ''
        unsupportedFeatures: 'CachingSha2Password,CancelSleepSuccessfully,Json,RoundDateTime,QueryAttributes,Sha256Password,Tls11,UuidToBin,Redirection'
  steps:
  - template: '.ci/integration-tests-steps.yml'
    parameters:
      image: $(image)
      connectionStringExtra: $(connectionStringExtra)
      unsupportedFeatures: $(unsupportedFeatures)
      DotNetCoreSdkVersion: $(DotNetCoreSdkVersion)
